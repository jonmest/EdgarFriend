// <auto-generated />
using System;
using EdgarFriend;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EdgarFriend.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20231004142209_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EdgarFriend.FundamentalEntry", b =>
                {
                    b.Property<string>("Cik")
                        .HasColumnType("text");

                    b.Property<string>("Frame")
                        .HasColumnType("text");

                    b.Property<string>("Label")
                        .HasColumnType("text");

                    b.Property<string>("Accn")
                        .HasColumnType("text");

                    b.Property<DateOnly>("End")
                        .HasColumnType("date");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Filed")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Form")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Fp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Fy")
                        .HasColumnType("integer");

                    b.Property<string>("PeriodType")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("Start")
                        .HasColumnType("date");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Val")
                        .HasColumnType("double precision");

                    b.HasKey("Cik", "Frame", "Label");

                    b.HasIndex("Cik", "PeriodType", "Label", "Symbol");

                    b.ToTable("FundamentalEntries");
                });

            modelBuilder.Entity("EdgarFriend.SymbolMapping", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("text");

                    b.Property<string>("Cik")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Symbol");

                    b.HasIndex("Symbol", "Cik");

                    b.ToTable("SymbolMappings");
                });
#pragma warning restore 612, 618
        }
    }
}
